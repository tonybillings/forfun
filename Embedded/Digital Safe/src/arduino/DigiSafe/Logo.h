#ifndef __digisafe_logo_H__
#define __digisafe_logo_H__

#include <Arduino.h>

namespace DigiSafe
{
	static byte DIGISAFELOGO_PIXELS_X[729] = { 
		92,
		92,
		92,
		92,
		92,
		92,
		92,
		92,
		92,
		92,
		92,
		92,
		92,
		93,
		93,
		93,
		93,
		93,
		93,
		93,
		93,
		93,
		93,
		93,
		93,
		93,
		94,
		94,
		94,
		94,
		94,
		94,
		94,
		94,
		94,
		94,
		94,
		94,
		94,
		95,
		95,
		96,
		96,
		97,
		97,
		97,
		97,
		98,
		98,
		98,
		98,
		99,
		99,
		99,
		99,
		100,
		100,
		100,
		100,
		101,
		101,
		101,
		101,
		102,
		102,
		102,
		102,
		103,
		103,
		103,
		103,
		104,
		104,
		104,
		104,
		105,
		105,
		105,
		105,
		106,
		106,
		106,
		106,
		107,
		107,
		107,
		107,
		108,
		108,
		108,
		108,
		108,
		109,
		109,
		109,
		109,
		109,
		109,
		109,
		109,
		109,
		109,
		109,
		109,
		109,
		110,
		110,
		110,
		110,
		110,
		110,
		110,
		110,
		110,
		110,
		110,
		110,
		111,
		111,
		111,
		111,
		111,
		111,
		111,
		111,
		111,
		111,
		111,
		118,
		118,
		118,
		118,
		118,
		118,
		118,
		118,
		118,
		119,
		119,
		119,
		119,
		119,
		119,
		119,
		119,
		119,
		120,
		120,
		120,
		120,
		120,
		120,
		120,
		120,
		120,
		125,
		125,
		125,
		125,
		125,
		125,
		126,
		126,
		126,
		126,
		126,
		126,
		126,
		126,
		127,
		127,
		127,
		127,
		127,
		127,
		127,
		127,
		127,
		128,
		128,
		128,
		128,
		128,
		128,
		128,
		128,
		128,
		129,
		129,
		129,
		129,
		130,
		130,
		130,
		130,
		131,
		131,
		131,
		131,
		132,
		132,
		132,
		132,
		133,
		133,
		133,
		133,
		134,
		134,
		134,
		134,
		135,
		135,
		135,
		135,
		136,
		136,
		136,
		136,
		137,
		137,
		137,
		137,
		138,
		138,
		138,
		138,
		138,
		138,
		139,
		139,
		139,
		139,
		139,
		140,
		140,
		140,
		140,
		140,
		140,
		140,
		140,
		140,
		140,
		140,
		140,
		140,
		141,
		141,
		141,
		141,
		141,
		141,
		141,
		141,
		141,
		141,
		141,
		141,
		142,
		142,
		142,
		142,
		142,
		142,
		142,
		142,
		142,
		142,
		142,
		142,
		143,
		143,
		143,
		143,
		143,
		143,
		143,
		143,
		143,
		143,
		143,
		148,
		148,
		148,
		148,
		148,
		148,
		148,
		148,
		148,
		149,
		149,
		149,
		149,
		149,
		149,
		149,
		149,
		149,
		150,
		150,
		150,
		150,
		150,
		150,
		150,
		150,
		150,
		151,
		151,
		151,
		151,
		151,
		151,
		151,
		151,
		151,
		155,
		155,
		156,
		156,
		156,
		156,
		156,
		156,
		156,
		157,
		157,
		157,
		157,
		157,
		157,
		157,
		157,
		158,
		158,
		158,
		158,
		158,
		158,
		158,
		158,
		158,
		159,
		159,
		159,
		159,
		159,
		159,
		159,
		160,
		160,
		160,
		160,
		160,
		160,
		161,
		161,
		161,
		161,
		161,
		161,
		162,
		162,
		162,
		162,
		162,
		162,
		163,
		163,
		163,
		163,
		163,
		163,
		164,
		164,
		164,
		164,
		164,
		164,
		165,
		165,
		165,
		165,
		165,
		165,
		166,
		166,
		166,
		166,
		166,
		166,
		167,
		167,
		167,
		167,
		167,
		167,
		168,
		168,
		168,
		168,
		168,
		168,
		169,
		169,
		169,
		169,
		169,
		169,
		170,
		170,
		170,
		170,
		170,
		170,
		171,
		171,
		171,
		171,
		171,
		171,
		172,
		172,
		172,
		172,
		172,
		172,
		172,
		172,
		172,
		172,
		173,
		173,
		173,
		173,
		173,
		173,
		173,
		173,
		173,
		173,
		174,
		174,
		174,
		174,
		174,
		174,
		174,
		174,
		174,
		175,
		175,
		175,
		175,
		175,
		175,
		175,
		180,
		180,
		181,
		181,
		181,
		181,
		182,
		182,
		182,
		182,
		182,
		182,
		182,
		183,
		183,
		183,
		183,
		183,
		183,
		183,
		183,
		184,
		184,
		184,
		184,
		184,
		184,
		185,
		185,
		185,
		185,
		185,
		185,
		186,
		186,
		186,
		186,
		186,
		186,
		187,
		187,
		187,
		187,
		187,
		187,
		188,
		188,
		188,
		188,
		188,
		188,
		189,
		189,
		189,
		189,
		189,
		189,
		190,
		190,
		190,
		190,
		190,
		190,
		191,
		191,
		191,
		191,
		191,
		191,
		192,
		192,
		192,
		192,
		192,
		192,
		193,
		193,
		193,
		193,
		193,
		193,
		194,
		194,
		194,
		194,
		195,
		195,
		195,
		195,
		196,
		196,
		196,
		196,
		196,
		196,
		196,
		196,
		196,
		197,
		197,
		197,
		197,
		197,
		197,
		197,
		197,
		197,
		198,
		198,
		198,
		198,
		198,
		198,
		198,
		198,
		203,
		203,
		203,
		203,
		203,
		203,
		203,
		203,
		203,
		203,
		203,
		203,
		204,
		204,
		204,
		204,
		204,
		204,
		204,
		204,
		204,
		204,
		204,
		204,
		204,
		205,
		205,
		205,
		205,
		205,
		205,
		205,
		205,
		205,
		205,
		205,
		205,
		205,
		206,
		206,
		206,
		206,
		207,
		207,
		207,
		207,
		208,
		208,
		208,
		208,
		209,
		209,
		209,
		210,
		213,
		213,
		213,
		213,
		213,
		213,
		213,
		214,
		214,
		214,
		214,
		214,
		214,
		214,
		214,
		214,
		215,
		215,
		215,
		215,
		215,
		215,
		215,
		215,
		215,
		215,
		216,
		216,
		216,
		216,
		216,
		217,
		217,
		217,
		217,
		217,
		218,
		218,
		218,
		218,
		218,
		219,
		219,
		219,
		219,
		219,
		220,
		220,
		220,
		220,
		220,
		221,
		221,
		221,
		221,
		221,
		222,
		222,
		222,
		222,
		222,
		223,
		223,
		223,
		223,
		223,
		224,
		224,
		224,
		224,
		224,
		225,
		225,
		225,
		225,
		225,
		226,
		226,
		226,
		226,
		226,
		227,
		227,
		227,
		227,
		227,
		227,
		228,
		228,
		228,
		228,
		228,
		229,
		229,
		229,
		229,
		229,
		230,
		230,
		230,
		230,
	};

	static byte DIGISAFELOGO_PIXELS_Y[729] = {
		113,
		114,
		115,
		116,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		113,
		114,
		115,
		116,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		113,
		114,
		115,
		116,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		113,
		114,
		113,
		114,
		113,
		114,
		124,
		125,
		113,
		114,
		124,
		125,
		113,
		114,
		124,
		125,
		113,
		114,
		124,
		125,
		113,
		114,
		124,
		125,
		113,
		114,
		124,
		125,
		113,
		114,
		124,
		125,
		113,
		114,
		124,
		125,
		113,
		114,
		124,
		125,
		113,
		114,
		124,
		125,
		113,
		114,
		124,
		125,
		113,
		114,
		123,
		124,
		125,
		113,
		114,
		115,
		116,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		113,
		114,
		115,
		116,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		114,
		115,
		116,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		118,
		119,
		120,
		121,
		122,
		123,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		117,
		118,
		124,
		125,
		117,
		118,
		124,
		125,
		117,
		118,
		124,
		125,
		117,
		118,
		124,
		125,
		117,
		118,
		124,
		125,
		117,
		118,
		124,
		125,
		117,
		118,
		124,
		125,
		117,
		118,
		124,
		125,
		117,
		118,
		124,
		125,
		117,
		118,
		124,
		125,
		128,
		129,
		117,
		118,
		127,
		128,
		129,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		126,
		127,
		128,
		129,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		126,
		127,
		128,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		126,
		127,
		128,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		126,
		127,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		115,
		116,
		114,
		115,
		116,
		117,
		118,
		124,
		125,
		113,
		114,
		115,
		116,
		117,
		118,
		124,
		125,
		113,
		114,
		115,
		116,
		117,
		118,
		119,
		124,
		125,
		113,
		114,
		117,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		124,
		125,
		113,
		114,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		113,
		114,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		113,
		114,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		113,
		114,
		119,
		120,
		121,
		122,
		123,
		122,
		123,
		121,
		122,
		123,
		124,
		117,
		120,
		121,
		122,
		123,
		124,
		125,
		117,
		118,
		120,
		121,
		122,
		123,
		124,
		125,
		117,
		118,
		120,
		121,
		124,
		125,
		117,
		118,
		120,
		121,
		124,
		125,
		117,
		118,
		120,
		121,
		124,
		125,
		117,
		118,
		120,
		121,
		124,
		125,
		117,
		118,
		120,
		121,
		124,
		125,
		117,
		118,
		120,
		121,
		124,
		125,
		117,
		118,
		120,
		121,
		124,
		125,
		117,
		118,
		120,
		121,
		124,
		125,
		117,
		118,
		120,
		121,
		124,
		125,
		117,
		118,
		120,
		121,
		124,
		125,
		117,
		118,
		124,
		125,
		117,
		118,
		124,
		125,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		114,
		115,
		116,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		113,
		114,
		115,
		116,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		113,
		114,
		115,
		116,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		113,
		114,
		117,
		118,
		113,
		114,
		117,
		118,
		113,
		114,
		117,
		118,
		113,
		114,
		117,
		113,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		116,
		117,
		118,
		119,
		120,
		121,
		122,
		123,
		124,
		125,
		116,
		117,
		118,
		124,
		125,
		116,
		117,
		118,
		124,
		125,
		116,
		117,
		118,
		120,
		121,
		116,
		117,
		118,
		120,
		121,
		116,
		117,
		118,
		120,
		121,
		116,
		117,
		118,
		120,
		121,
		116,
		117,
		118,
		120,
		121,
		116,
		117,
		118,
		120,
		121,
		116,
		117,
		118,
		120,
		121,
		116,
		117,
		118,
		120,
		121,
		116,
		117,
		118,
		120,
		121,
		116,
		117,
		118,
		119,
		120,
		121,
		117,
		118,
		119,
		120,
		121,
		117,
		118,
		119,
		120,
		121,
		118,
		119,
		120,
		121
	};

	static byte DIGISAFELOGO_LINES[12] = {
		0, 129, 138,
		0, 130, 138,
		218, 124, 101,
		218, 125, 101
	};

	struct DigiSafeLogo
	{
		int PixelsLength;
		byte* PixelsX;
		byte* PixelsY;
		int LinesLength;
		byte* Lines;	

		DigiSafeLogo()
		{
			this->PixelsLength = sizeof(DIGISAFELOGO_PIXELS_X) / sizeof(*DIGISAFELOGO_PIXELS_X);
			this->PixelsX = DIGISAFELOGO_PIXELS_X;
			this->PixelsY = DIGISAFELOGO_PIXELS_Y;
			this->LinesLength = sizeof(DIGISAFELOGO_LINES) / sizeof(*DIGISAFELOGO_LINES);
			this->Lines = DIGISAFELOGO_LINES;
		}
	};
}

#endif
