#ifndef __ACText__
#define __ACText__

#include <avr/pgmspace.h>
#include "RA8875.h"

PROGMEM static const uint8_t ACText_strokes[] = {
16,
128,
70,
14,
132,
28,
131,
5,
153,
3,
12,
135,
26,
131,
4,
157,
1,
11,
131,
2,
130,
24,
131,
4,
131,
23,
131,
0,
10,
131,
4,
130,
23,
130,
4,
131,
26,
130,
9,
131,
6,
130,
21,
131,
4,
130,
27,
130,
8,
131,
8,
130,
19,
131,
5,
130,
30,
7,
131,
10,
130,
17,
131,
6,
130,
30,
6,
131,
12,
130,
16,
130,
7,
130,
30,
5,
131,
14,
130,
14,
131,
7,
130,
30,
4,
151,
12,
131,
8,
130,
30,
3,
153,
10,
131,
9,
130,
28,
128,
0,
2,
131,
20,
130,
9,
130,
10,
130,
27,
130,
1,
131,
22,
130,
7,
131,
10,
131,
26,
130,
0,
131,
24,
130,
5,
131,
12,
131,
23,
131,
0,
131,
26,
130,
3,
131,
14,
157,
1,
130,
28,
130,
2,
130,
18,
152,
3,
36,
131,
47,
88
};

PROGMEM static const uint16_t ACText_colors[] = {
63519,
65535
};

#include "Bitmap.h"

class ACText : public Bitmap
{
public:
	ACText()
	{
		Width = 89;
        Height = 19;
        TransparencyColor = 63519;
        StrokesArraySize = sizeof(ACText_strokes) / sizeof(ACText_strokes[0]);
        ColorsArraySize = sizeof(ACText_colors) / sizeof(ACText_colors[0]);
		SmallStrokes = ACText_strokes;
		Colors = ACText_colors;
        LastPosX = LastPosY = -1;
        IsSmallBitmap = true;
	}
};

#endif
